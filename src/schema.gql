# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateFighterInventoryInput {
  """Unique code"""
  code: String!

  """Level"""
  level: Int!

  """Type (COIN, USDT, NFT)"""
  type: String!

  """User ID"""
  userId: Int!
}

input CreateFighterItemInput {
  """Unique code"""
  code: String!

  """Description"""
  comment: String

  """Cost"""
  cost: Float!

  """Image hash in determinated network"""
  image: String!

  """Level"""
  level: Int!

  """Unique name"""
  name: String!

  """Next level available?"""
  nextLevel: Boolean

  """Rarity (common, uncommon, rare, epic, legendary)"""
  rarity: String

  """Type (COIN, USDT, NFT)"""
  type: String!
}

input CreateFighterShopInput {
  """Unique code"""
  code: String!

  """Is disabled?"""
  disabled: Boolean

  """Level"""
  level: Int!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

input CreateMinerInventoryInput {
  """Unique code"""
  code: String!

  """Last claim at..."""
  lastClaimAt: DateTime

  """Level"""
  level: Int!

  """Miner item slot (none, s1, s2, s3, s4)"""
  slot: String

  """Type (COIN, USDT, NFT)"""
  type: String!

  """User ID"""
  userId: Int!
}

input CreateMinerItemInput {
  """Unique code"""
  code: String!

  """Description"""
  comment: String

  """Cost"""
  cost: Float!

  """Image hash in determinated network"""
  image: String!

  """Level"""
  level: Int!

  """Unique name"""
  name: String!

  """Next level available?"""
  nextLevel: Boolean

  """Rarity (common, uncommon, rare, epic, legendary)"""
  rarity: String

  """Mining spped per hour"""
  speed: Float!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

input CreateMinerShopInput {
  """Unique code"""
  code: String!

  """Is disabled?"""
  disabled: Boolean

  """Level"""
  level: Int!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

input CreateUserInput {
  """User balance (COIN)"""
  coinBalance: Float

  """User banned?"""
  isBanned: Boolean

  """Premium account?"""
  isPremium: Boolean

  """Last claim at..."""
  lastClaimAt: DateTime

  """User Telegram account name"""
  name: String

  """Refer balance (COIN)"""
  referCoinBalance: Float

  """Refer Telegram ID"""
  referTgId: Int

  """User Telegram ID"""
  tgId: Int!

  """Total User balance (COIN) w/o spending"""
  totalCoinBalance: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FighterInventory {
  """Unique code"""
  code: String!

  """Fighter item other fields"""
  fighterItem: FighterItem!
  id: Int!

  """Level"""
  level: Int!

  """Type (COIN, USDT, NFT)"""
  type: String!

  """User ID"""
  userId: Int!
}

type FighterItem {
  """Unique code"""
  code: String!

  """Description"""
  comment: String!

  """Cost"""
  cost: Float!
  id: Int!

  """Image hash in determinated network"""
  image: String!

  """Level"""
  level: Int!

  """Unique name"""
  name: String!

  """Next level available?"""
  nextLevel: Boolean!

  """Rarity (common, uncommon, rare, epic, legendary)"""
  rarity: String!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

type FighterShop {
  """Unique code"""
  code: String!

  """Is disabled?"""
  disabled: Boolean!

  """Fighter item other fields"""
  fighterItem: FighterItem!
  id: Int!

  """Level"""
  level: Int!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

type MinerInventory {
  """Unique code"""
  code: String!
  id: Int!

  """Last claim at..."""
  lastClaimAt: DateTime!

  """Level"""
  level: Int!

  """Miner item other fields"""
  minerItem: MinerItem!

  """Miner item slot (none, s1, s2, s3, s4)"""
  slot: String!

  """Type (COIN, USDT, NFT)"""
  type: String!

  """User ID"""
  userId: Int!
}

type MinerItem {
  """Unique code"""
  code: String!

  """Description"""
  comment: String!

  """Cost"""
  cost: Float!
  id: Int!

  """Image hash in determinated network"""
  image: String!

  """Level"""
  level: Int!

  """Unique name"""
  name: String!

  """Next level available?"""
  nextLevel: Boolean!

  """Rarity (common, uncommon, rare, epic, legendary)"""
  rarity: String!

  """Mining spped per hour"""
  speed: Float!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

type MinerShop {
  """Unique code"""
  code: String!

  """Is disabled?"""
  disabled: Boolean!
  id: Int!

  """Level"""
  level: Int!

  """Miner item other fields"""
  minerItem: MinerItem!

  """Type (COIN, USDT, NFT)"""
  type: String!
}

type Mutation {
  createFighterInventoryItem(createFighterInventoryInput: CreateFighterInventoryInput!): FighterInventory!
  createFighterItem(createFighterItemInput: CreateFighterItemInput!): FighterItem!
  createFighterShopItem(createFighterShopInput: CreateFighterShopInput!): FighterShop!
  createMinerInventoryItem(createMinerInventoryInput: CreateMinerInventoryInput!): MinerInventory!
  createMinerItem(createMinerItemInput: CreateMinerItemInput!): MinerItem!
  createMinerShopItem(createMinerShopInput: CreateMinerShopInput!): MinerShop!
  createUser(createUserInput: CreateUserInput!): User!
  removeFighterInventoryItem(id: Int!): FighterInventory!
  removeFighterItem(id: Int!): FighterItem!
  removeFighterShopItem(id: Int!): FighterShop!
  removeMinerInventoryItem(id: Int!): MinerInventory!
  removeMinerItem(id: Int!): MinerItem!
  removeMinerShopItem(id: Int!): MinerShop!
  removePayment(id: String!): Payment!
  removeUser(id: Int!): User!
  updateFighterInventoryItem(updateFighterInventoryInput: UpdateFighterInventoryInput!): FighterInventory!
  updateFighterItem(updateFighterItemInput: UpdateFighterItemInput!): FighterItem!
  updateFighterShopItem(updateFighterShopInput: UpdateFighterShopInput!): FighterShop!
  updateMinerInventoryItem(updateMinerInventoryInput: UpdateMinerInventoryInput!): MinerInventory!
  updateMinerItem(updateMinerItemInput: UpdateMinerItemInput!): MinerItem!
  updateMinerShopItem(updateMinerShopInput: UpdateMinerShopInput!): MinerShop!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Payment {
  """Payment amount"""
  amount: Float!

  """Payment currency"""
  currency: String!

  """ID (cuid)"""
  id: String!

  """Payment status"""
  status: String!

  """Payment type"""
  type: Int!

  """User ID"""
  userId: Int!
}

type Query {
  fighterInventoryItem(id: Int!): FighterInventory!
  fighterInventoryItems: [FighterInventory!]!
  fighterItem(id: Int!): FighterItem!
  fighterItems: [FighterItem!]!
  fighterShopItem(id: Int!): FighterShop!
  fighterShopItems: [FighterShop!]!
  minerInventoryItem(id: Int!): MinerInventory!
  minerInventoryItems: [MinerInventory!]!
  minerItem(id: Int!): MinerItem!
  minerItems: [MinerItem!]!
  minerShopItem(id: Int!): MinerShop!
  minerShopItems: [MinerShop!]!
  payment(id: String!): Payment!
  payments: [Payment!]!
  user(id: Int!): User!
  users: [User!]!
}

input UpdateFighterInventoryInput {
  """Unique code"""
  code: String
  id: Int!

  """Level"""
  level: Int

  """Type (COIN, USDT, NFT)"""
  type: String

  """User ID"""
  userId: Int
}

input UpdateFighterItemInput {
  """Unique code"""
  code: String

  """Description"""
  comment: String

  """Cost"""
  cost: Float
  id: Int!

  """Image hash in determinated network"""
  image: String

  """Level"""
  level: Int

  """Unique name"""
  name: String

  """Next level available?"""
  nextLevel: Boolean

  """Rarity (common, uncommon, rare, epic, legendary)"""
  rarity: String

  """Type (COIN, USDT, NFT)"""
  type: String
}

input UpdateFighterShopInput {
  """Unique code"""
  code: String

  """Is disabled?"""
  disabled: Boolean
  id: Int!

  """Level"""
  level: Int

  """Type (COIN, USDT, NFT)"""
  type: String
}

input UpdateMinerInventoryInput {
  """Unique code"""
  code: String
  id: Int!

  """Last claim at..."""
  lastClaimAt: DateTime

  """Level"""
  level: Int

  """Miner item slot (none, s1, s2, s3, s4)"""
  slot: String

  """Type (COIN, USDT, NFT)"""
  type: String

  """User ID"""
  userId: Int
}

input UpdateMinerItemInput {
  """Unique code"""
  code: String

  """Description"""
  comment: String

  """Cost"""
  cost: Float
  id: Int!

  """Image hash in determinated network"""
  image: String

  """Level"""
  level: Int

  """Unique name"""
  name: String

  """Next level available?"""
  nextLevel: Boolean

  """Rarity (common, uncommon, rare, epic, legendary)"""
  rarity: String

  """Mining spped per hour"""
  speed: Float

  """Type (COIN, USDT, NFT)"""
  type: String
}

input UpdateMinerShopInput {
  """Unique code"""
  code: String

  """Is disabled?"""
  disabled: Boolean
  id: Int!

  """Level"""
  level: Int

  """Type (COIN, USDT, NFT)"""
  type: String
}

input UpdateUserInput {
  """User balance (COIN)"""
  coinBalance: Float
  id: Int!

  """User banned?"""
  isBanned: Boolean

  """Premium account?"""
  isPremium: Boolean

  """Last claim at..."""
  lastClaimAt: DateTime

  """User Telegram account name"""
  name: String

  """Refer balance (COIN)"""
  referCoinBalance: Float

  """Refer Telegram ID"""
  referTgId: Int

  """User Telegram ID"""
  tgId: Int

  """Total User balance (COIN) w/o spending"""
  totalCoinBalance: Float
}

type User {
  """User balance (COIN)"""
  coinBalance: Float!

  """Fighter inventory items"""
  fighterInventory: [FighterInventory!]!
  id: Int!

  """User banned?"""
  isBanned: Boolean!

  """Premium account?"""
  isPremium: Boolean!

  """Last claim at..."""
  lastClaimAt: DateTime!

  """Miner inventory items"""
  minerInventory: [MinerInventory!]!

  """User Telegram account name"""
  name: String!

  """User payment orders"""
  payments: [Payment!]!

  """Refer balance (COIN)"""
  referCoinBalance: Float!

  """Refer Telegram ID"""
  referTgId: Int!

  """User Telegram ID"""
  tgId: Int!

  """Total User balance (COIN) w/o spending"""
  totalCoinBalance: Float!
}